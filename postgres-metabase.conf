


# --------------------------------------------------------------------------------------------------

apt install crudini 

curl -sS https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -
cat > /etc/apt/sources.list.d/pgsql.list <<EOF
deb [arch=amd64] https://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main
EOF
apt update && apt -y full-upgrade
apt -y install postgresql-12 postgresql-contrib postgresql-client-12
apt -y autoremove

# Set only listen on IPv4
BIND_ADDRESS="0.0.0.0"
sed -i "s/#listen_addresses/listen_addresses/" /etc/postgresql/12/main/postgresql.conf
sed -i "s|\("^listen_addresses" =* *\).*|\1'${BIND_ADDRESS}'|" /etc/postgresql/12/main/postgresql.conf
cat /etc/postgresql/12/main/postgresql.conf | grep listen_addresses
cp /etc/postgresql/12/main/pg_hba.{conf,conf-ori}

cat << EOF | sudo tee /etc/postgresql/12/main/pg_hba.conf
# Put your actual configuration here
# ----------------------------------
#
# If you want to allow non-local connections, you need to add more
# "host" records.  In that case you will also need to make PostgreSQL
# listen on a non-local interface via the listen_addresses
# configuration parameter, or via the -i or -h command line switches.
#
# DO NOT DISABLE!
# If you change this first entry you will need to make sure that the
# database superuser can access the database using some other method.
# Noninteractive access to all databases is required during automatic
# maintenance (custom daily cronjobs, replication, and similar tasks).
#
# TYPE  DATABASE        USER            ADDRESS                 METHOD
# Database administrative login by Unix domain socket.
# "local" is for Unix domain socket connections only.
local   all             postgres                                peer
local   all             all                                     peer
# Allow only from IPv4 connections, disable IPv6:
host    all             all             127.0.0.1/32            md5
#host    all             all             192.168.10.0/28         md5
#host    all             all             10.40.96.0/20           md5
#host    all             all             0.0.0.0/0               md5
# Allow replication connections by a user with replication privilege:
local   replication     all                                     peer
host    replication     all             127.0.0.1/32            md5
#host    replication     all             0.0.0.0/0               md5
EOF

systemctl restart postgresql
systemctl status postgresql
netstat -pltn | grep postgres

# Create new user: denzamy
perl -pi -e 's#(.*sudo.*ALL=)(.*)#${1}(ALL) NOPASSWD:ALL#' /etc/sudoers
[[ $(cat /etc/group  | grep -c webmaster) -eq 1 ]] || groupadd -g 3000 webmaster
[[ $(cat /etc/passwd | grep -c webmaster) -eq 1 ]] || useradd -u 3000 -s /usr/sbin/nologin -d /bin/null -g webmaster webmaster

useradd -mg webmaster -s `which bash` denzamy -c "${SSH_FULLNAME}"
usermod -a -G sudo denzamy
passwd denzamy

PGSQL_ROOT_PASS="Mast3RDB_"
sudo -u postgres psql -c "ALTER USER postgres PASSWORD '$PGSQL_ROOT_PASS'"
sudo -u postgres psql


# --------------------------------------------------------------------------------------------------
# Optimasi PostgreSQL: https://pgtune.leopard.in.ua/#/
# --------------------------------------------------------------------------------------------------
# DB Version: 12
# OS Type: linux
# DB Type: web
# Total Memory (RAM): 8 GB
# CPUs num: 4
# Connections num: 100
# Data Storage: ssd

# max_connections = 100
# shared_buffers = 2GB
# effective_cache_size = 6GB
# maintenance_work_mem = 512MB
# checkpoint_completion_target = 0.7
# wal_buffers = 16MB
# default_statistics_target = 100
# random_page_cost = 1.1
# effective_io_concurrency = 200
# work_mem = 10485kB
# min_wal_size = 1GB
# max_wal_size = 4GB
# max_worker_processes = 4
# max_parallel_workers_per_gather = 2
# max_parallel_workers = 4
# max_parallel_maintenance_workers = 2
# shared_preload_libraries = 'pg_stat_statements'
# pg_stat_statements.max = 10000
# pg_stat_statements.track = all

systemctl restart postgresql
systemctl status postgresql
netstat -pltn | grep postgres



# --------------------------------------------------------------------------------------------------
# Install Zulu JDK
# --------------------------------------------------------------------------------------------------
apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 0xB1998361219BD9C9
echo -e 'deb [arch=amd64] http://repos.azulsystems.com/ubuntu stable main' > /etc/apt/sources.list.d/zulujdk.list
apt update && apt -y full-upgrade && apt -y install zulu-8 && apt -y autoremove

